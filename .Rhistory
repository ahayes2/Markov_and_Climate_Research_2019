print(min)
print(percentChange)
tStates <- cut(percentChange, breaks = c(-2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3),
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
print(tStates)
library(markovchain)
weatherFittedMLE <- markovchainFit(data = tStates)
weatherFittedMLE
simulatedWeather <- rmarkovchain(n = 80, object = weatherFittedMLE$estimate, t0 = 2)
print(simulatedWeather)
plot(simulatedWeather, type="l")
setwd("/Users/allison/Desktop/Markov_2019_Research")
dF <- read.csv("year_avg.csv", header = F)
dF$V1 -> dataList
len <- length(dataList)
percentChange <- vector()
for(i in 2:len-1)
{
cur <- dataList[i]
nex <- dataList[i+1]
change <- ((nex - cur) / abs(cur)) * 100
percentChange  <- append(percentChange, change)
}
max <- max(percentChange)
min <- min(percentChange)
print(max)
print(min)
print(percentChange)
tStates <- cut(percentChange, breaks = c(-2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3),
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
print(tStates)
library(markovchain)
weatherFittedMLE <- markovchainFit(data = tStates)
weatherFittedMLE
simulatedWeather <- rmarkovchain(n = 80, object = weatherFittedMLE$estimate, t0 = 2)
print(simulatedWeather)
plot(simulatedWeather, type="l")
setwd("/Users/allison/Desktop/Markov_2019_Research")
dF <- read.csv("year_avg.csv", header = F)
dF$V1 -> dataList
len <- length(dataList)
percentChange <- vector()
for(i in 2:len-1)
{
cur <- dataList[i]
nex <- dataList[i+1]
change <- ((nex - cur) / abs(cur)) * 100
percentChange  <- append(percentChange, change)
}
max <- max(percentChange)
min <- min(percentChange)
print(max)
print(min)
print(percentChange)
tStates <- cut(percentChange, breaks = c(-2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3),
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
print(tStates)
library(markovchain)
weatherFittedMLE <- markovchainFit(data = tStates)
weatherFittedMLE
simulatedWeather <- rmarkovchain(n = 80, object = weatherFittedMLE$estimate, t0 = 2)
print(simulatedWeather)
plot(simulatedWeather, type="l")
setwd("/Users/allison/Desktop/Markov_2019_Research")
dF <- read.csv("year_avg.csv", header = F)
dF$V1 -> dataList
len <- length(dataList)
percentChange <- vector()
for(i in 2:len-1)
{
cur <- dataList[i]
nex <- dataList[i+1]
change <- ((nex - cur) / abs(cur)) * 100
percentChange  <- append(percentChange, change)
}
max <- max(percentChange)
min <- min(percentChange)
print(max)
print(min)
print(percentChange)
tStates <- cut(percentChange, breaks = c(-2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3),
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
print(tStates)
library(markovchain)
weatherFittedMLE <- markovchainFit(data = tStates)
weatherFittedMLE
simulatedWeather <- rmarkovchain(n = 80, object = weatherFittedMLE$estimate, t0 = 2)
print(simulatedWeather)
plot(simulatedWeather, type="l")
setwd("/Users/allison/Desktop/Markov_2019_Research")
dF <- read.csv("year_avg.csv", header = F)
dF$V1 -> dataList
len <- length(dataList)
percentChange <- vector()
for(i in 2:len-1)
{
cur <- dataList[i]
nex <- dataList[i+1]
change <- ((nex - cur) / abs(cur)) * 100
percentChange  <- append(percentChange, change)
}
max <- max(percentChange)
min <- min(percentChange)
print(max)
print(min)
print(percentChange)
tStates <- cut(percentChange, breaks = c(-2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3),
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
print(tStates)
library(markovchain)
weatherFittedMLE <- markovchainFit(data = tStates)
weatherFittedMLE
simulatedWeather <- rmarkovchain(n = 80, object = weatherFittedMLE$estimate, t0 = 2)
print(simulatedWeather)
plot(simulatedWeather, type="l")
setwd("/Users/allison/Desktop/Markov_2019_Research")
dF <- read.csv("year_avg.csv", header = F)
dF$V1 -> dataList
len <- length(dataList)
percentChange <- vector()
for(i in 2:len-1)
{
cur <- dataList[i]
nex <- dataList[i+1]
change <- ((nex - cur) / abs(cur)) * 100
percentChange  <- append(percentChange, change)
}
max <- max(percentChange)
min <- min(percentChange)
print(max)
print(min)
print(percentChange)
tStates <- seq(min(percentChange), max(percentChange), 0.5) #cut(percentChange, breaks = c(-2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3),
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
setwd("/Users/allison/Desktop/Markov_2019_Research")
dF <- read.csv("year_avg.csv", header = F)
dF$V1 -> dataList
len <- length(dataList)
percentChange <- vector()
for(i in 2:len-1)
{
cur <- dataList[i]
nex <- dataList[i+1]
change <- ((nex - cur) / abs(cur)) * 100
percentChange  <- append(percentChange, change)
}
max <- max(percentChange)
min <- min(percentChange)
print(max)
print(min)
print(percentChange)
tStates <- seq(min(percentChange), max(percentChange), 0.5) #cut(percentChange, breaks = c(-2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3),
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)
print(tStates)
library(markovchain)
weatherFittedMLE <- markovchainFit(data = tStates)
weatherFittedMLE
setwd("/Users/allison/Desktop/Markov_2019_Research")
dF <- read.csv("year_avg.csv", header = F)
dF$V1 -> dataList
len <- length(dataList)
percentChange <- vector()
for(i in 2:len-1)
{
cur <- dataList[i]
nex <- dataList[i+1]
change <- ((nex - cur) / abs(cur)) * 100
percentChange  <- append(percentChange, change)
}
max <- max(percentChange)
min <- min(percentChange)
print(max)
print(min)
print(percentChange)
tStates <- seq(percentChange, (min(percentChange), max(percentChange), 0.5) #cut(percentChange, breaks = c(-2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3),
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
setwd("/Users/allison/Desktop/Markov_2019_Research")
dF <- read.csv("year_avg.csv", header = F)
dF$V1 -> dataList
len <- length(dataList)
percentChange <- vector()
for(i in 2:len-1)
{
cur <- dataList[i]
nex <- dataList[i+1]
change <- ((nex - cur) / abs(cur)) * 100
percentChange  <- append(percentChange, change)
}
max <- max(percentChange)
min <- min(percentChange)
print(max)
print(min)
print(percentChange)
tStates <- seq(percentChange, (min(percentChange), max(percentChange), 0.5), #cut(percentChange, breaks = c(-2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3),
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
setwd("/Users/allison/Desktop/Markov_2019_Research")
dF <- read.csv("year_avg.csv", header = F)
dF$V1 -> dataList
len <- length(dataList)
percentChange <- vector()
for(i in 2:len-1)
{
cur <- dataList[i]
nex <- dataList[i+1]
change <- ((nex - cur) / abs(cur)) * 100
percentChange  <- append(percentChange, change)
}
max <- max(percentChange)
min <- min(percentChange)
print(max)
print(min)
print(percentChange)
tStates <- cut(percentChange, breaks = c(-2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3),
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
print(tStates)
library(markovchain)
weatherFittedMLE <- markovchainFit(data = tStates)
weatherFittedMLE
simulatedWeather <- rmarkovchain(n = 80, object = weatherFittedMLE$estimate, t0 = 2)
print(simulatedWeather)
plot(simulatedWeather, type="l")
len <- length(simulatedWeather)
print(len)
print(simulatedWeather[1])
setwd("/Users/allison/Desktop/Markov_2019_Research")
dF <- read.csv("year_avg.csv", header = F)
dF$V1 -> dataList
len <- length(dataList)
percentChange <- vector()
for(i in 2:len-1)
{
cur <- dataList[i]
nex <- dataList[i+1]
change <- ((nex - cur) / abs(cur)) * 100
percentChange  <- append(percentChange, change)
}
max <- max(percentChange)
min <- min(percentChange)
print(max)
print(min)
print(percentChange)
tStates <- cut(percentChange, breaks = c(-2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3),
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
print(tStates)
library(markovchain)
weatherFittedMLE <- markovchainFit(data = tStates)
weatherFittedMLE
simulatedWeather <- rmarkovchain(n = 80, object = weatherFittedMLE$estimate, t0 = 2)
print(simulatedWeather)
plot(simulatedWeather, type="l")
len <- length(simulatedWeather)
i = 1
estimatedChange <- vector()
add
while (i < len)
{
if (simulatedWeather[i] == "1")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "2")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "3")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "4")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "5")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "6")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "7")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "8")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "9")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "10")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "11")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
}
setwd("/Users/allison/Desktop/Markov_2019_Research")
dF <- read.csv("year_avg.csv", header = F)
dF$V1 -> dataList
len <- length(dataList)
percentChange <- vector()
for(i in 2:len-1)
{
cur <- dataList[i]
nex <- dataList[i+1]
change <- ((nex - cur) / abs(cur)) * 100
percentChange  <- append(percentChange, change)
}
max <- max(percentChange)
min <- min(percentChange)
print(max)
print(min)
print(percentChange)
tStates <- cut(percentChange, breaks = c(-2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3),
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
print(tStates)
library(markovchain)
weatherFittedMLE <- markovchainFit(data = tStates)
weatherFittedMLE
simulatedWeather <- rmarkovchain(n = 80, object = weatherFittedMLE$estimate, t0 = 2)
print(simulatedWeather)
plot(simulatedWeather, type="l")
len <- length(simulatedWeather)
i = 1
estimatedChange <- vector()
add
while (i < len)
{
if (simulatedWeather[i] == "1")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "2")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "3")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "4")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "5")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "6")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "7")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "8")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "9")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "10")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "11")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
}
print(estimatedChange)
setwd("/Users/allison/Desktop/Markov_2019_Research")
dF <- read.csv("year_avg.csv", header = F)
dF$V1 -> dataList
len <- length(dataList)
percentChange <- vector()
for(i in 2:len-1)
{
cur <- dataList[i]
nex <- dataList[i+1]
change <- ((nex - cur) / abs(cur)) * 100
percentChange  <- append(percentChange, change)
}
max <- max(percentChange)
min <- min(percentChange)
print(max)
print(min)
print(percentChange)
tStates <- cut(percentChange, breaks = c(-2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3),
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
print(tStates)
library(markovchain)
weatherFittedMLE <- markovchainFit(data = tStates)
weatherFittedMLE
simulatedWeather <- rmarkovchain(n = 80, object = weatherFittedMLE$estimate, t0 = 2)
print(simulatedWeather)
plot(simulatedWeather, type="l")
len <- length(simulatedWeather)
i = 1
estimatedChange <- vector()
add
while (i < len)
{
if (simulatedWeather[i] == "1")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "2")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "3")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "4")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "5")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "6")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "7")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "8")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "9")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "10")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
if (simulatedWeather[i] == "11")
{
add <- (((2 - 2.5)/2) + 14.178)
append(estimatedChange, add)
}
}
#print(estimatedChange)
setwd("/Users/allison/Desktop/Markov_2019_Research")
dF <- read.csv("year_avg.csv", header = F)
dF$V1 -> dataList
len <- length(dataList)
percentChange <- vector()
for(i in 2:len-1)
{
cur <- dataList[i]
nex <- dataList[i+1]
change <- ((nex - cur) / abs(cur)) * 100
percentChange  <- append(percentChange, change)
}
max <- max(percentChange)
min <- min(percentChange)
print(max)
print(min)
print(percentChange)
tStates <- cut(percentChange, breaks = c(-2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3),
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
print(tStates)
setwd("/Users/allison/Desktop/Markov_2019_Research")
quit()
